/*
 * Copyright 2025 Free Software Foundation, Inc.
 *
 * This file is part of GNU Radio
 *
 * SPDX-License-Identifier: GPL-3.0-or-later
 *
 */

/***********************************************************************************/
/* This file is automatically generated using bindtool and can be manually edited  */
/* The following lines can be configured to regenerate this file during cmake      */
/* If manual edits are made, the following tags should be modified accordingly.    */
/* BINDTOOL_GEN_AUTOMATIC(1)                                                       */
/* BINDTOOL_USE_PYGCCXML(0)                                                        */
/* BINDTOOL_HEADER_FILE(find_local_max.h)                                        */
/* BINDTOOL_HEADER_FILE_HASH(b940c6b420d2a9a81131a23d4cd50f30)                     */
/***********************************************************************************/

#include <pybind11/complex.h>
#include <pybind11/pybind11.h>
#include <pybind11/stl.h>

namespace py = pybind11;

#include <gnuradio/doa/find_local_max.h>
// pydoc.h is automatically generated in the build directory
#include <find_local_max_pydoc.h>

void bind_find_local_max(py::module& m)
{

    using find_local_max = ::gr::doa::find_local_max;


    py::class_<find_local_max,
               gr::sync_block,
               gr::block,
               gr::basic_block,
               std::shared_ptr<find_local_max>>(m, "find_local_max", D(find_local_max))

        .def(py::init(&find_local_max::make),
             py::arg("num_max_vals"),
             py::arg("vector_len"),
             py::arg("x_min"),
             py::arg("x_max"),
             D(find_local_max, make))


        ;
}
